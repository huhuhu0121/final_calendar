-- calendar에서 테이블 생성

CREATE TABLE EVENT (    -- 일정
	event_id INT NOT NULL,
	MEMBER_ID INT NOT NULL,
	category_ID INT NOT NULL,
	routine_ID INT NOT NULL,
	title VARCHAR(100) NOT NULL,
	location VARCHAR(255) NULL,
	start_date date NULL,
	end_date date NULL,
	memo VARCHAR(255) NULL,
	all_day INT NULL,
	publice INT NOT NULL
);

CREATE TABLE member (   -- 회원(사용자)  -하이
	MEMBER_ID INT NOT NULL,
	code_ID INT NULL,
	EMAIL VARCHAR(200) NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	PASSWORD VARCHAR(200) NOT NULL,
	GENDER VARCHAR(100) NOT NULL,
	BIRTH DATE NOT NULL,
	IMAGE VARCHAR(255) NULL,
	BIO VARCHAR(255) NULL
);

CREATE TABLE routine (  -- 루틴
	routine_ID INT NOT NULL,
	MEMBER_ID INT NOT NULL,
	routine_title VARCHAR(100) NOT NULL,
	routine_start DATE NOT NULL,
	routine_end DATE NOT NULL,
	routine_pattern VARCHAR(50) NOT NULL,
	routine_time DATE NULL,
	routine_manual INT NULL
);

CREATE TABLE notification (     -- 알림
	notif_ID INT NOT NULL,
	MEMBER_ID INT NOT NULL,
	code_ID INT NOT NULL,
	notif_type VARCHAR(50) NULL,
	notif_message VARCHAR(255) NULL,
	notif_read INT NULL
);

CREATE TABLE calender (     -- 캘린더
	calen_ID INT NOT NULL,
	MEMBER_ID INT NOT NULL,
	event_id INT NOT NULL,
	calen_name VARCHAR(100) NOT NULL,
	calen_detail VARCHAR(500) NOT NULL,
	calen_color VARCHAR(20) NULL,
	calen_create DATE NOT NULL,
	calen_update DATE NOT NULL
);

CREATE TABLE Admin (        -- 관리자
	admin_Id INT NOT NULL,
	admin_email VARCHAR(100) NOT NULL,
	admin_password VARCHAR(100) NOT NULL
);

CREATE TABLE category (     -- 카테고리
	category_ID INT NOT NULL,
	category_name VARCHAR(100) NOT NULL
);

CREATE TABLE friend (       -- 친구코드
	code_ID INT NOT NULL
);

ALTER TABLE EVENT ADD CONSTRAINT PK_EVENT PRIMARY KEY (
	event_id
);

ALTER TABLE member ADD CONSTRAINT PK_MEMBER PRIMARY KEY (
	MEMBER_ID
);

ALTER TABLE routine ADD CONSTRAINT PK_ROUTINE PRIMARY KEY (
	routine_ID
);

ALTER TABLE notification ADD CONSTRAINT PK_NOTIFICATION PRIMARY KEY (
	notif_ID
);

ALTER TABLE calender ADD CONSTRAINT PK_CALENDER PRIMARY KEY (
	calen_ID
);

ALTER TABLE Admin ADD CONSTRAINT PK_ADMIN PRIMARY KEY (
	admin_Id
);

ALTER TABLE category ADD CONSTRAINT PK_CATEGORY PRIMARY KEY (
	category_ID
);

ALTER TABLE friend ADD CONSTRAINT PK_FRIEND PRIMARY KEY (
	code_ID
);

ALTER TABLE EVENT ADD CONSTRAINT FK_member_TO_EVENT_1 FOREIGN KEY (
	MEMBER_ID
)
REFERENCES member (
	MEMBER_ID
);

ALTER TABLE EVENT ADD CONSTRAINT FK_category_TO_EVENT_1 FOREIGN KEY (
	category_ID
)
REFERENCES category (
	category_ID
);

ALTER TABLE EVENT ADD CONSTRAINT FK_routine_TO_EVENT_1 FOREIGN KEY (
	routine_ID
)
REFERENCES routine (
	routine_ID
);

ALTER TABLE member ADD CONSTRAINT FK_friend_TO_member_1 FOREIGN KEY (
	code_ID
)
REFERENCES friend (
	code_ID
);

ALTER TABLE routine ADD CONSTRAINT FK_member_TO_routine_1 FOREIGN KEY (
	MEMBER_ID
)
REFERENCES member (
	MEMBER_ID
);

ALTER TABLE notification ADD CONSTRAINT FK_member_TO_notification_1 FOREIGN KEY (
	MEMBER_ID
)
REFERENCES member (
	MEMBER_ID
);

ALTER TABLE notification ADD CONSTRAINT FK_friend_TO_notification_1 FOREIGN KEY (
	code_ID
)
REFERENCES friend (
	code_ID
);

ALTER TABLE calender ADD CONSTRAINT FK_member_TO_calender_1 FOREIGN KEY (
	MEMBER_ID
)
REFERENCES member (
	MEMBER_ID
);

ALTER TABLE calender ADD CONSTRAINT FK_EVENT_TO_calender_1 FOREIGN KEY (
	event_id
)
REFERENCES EVENT (
	event_id
);

insert into category(category_id, category_name)
values(1, '공부');

insert into member(member_id, code_id, email, name, password, gender, birth, image, bio)
values(2, 1, 'd@d.com', '홍길동', '1234', '남자', sysdate, null, null);

insert into routine(routine_id, member_id, routine_title,
routine_start, routine_end, routine_pattern, routine_time, routine_manual)
values(123, 1, '루틴', sysdate, sysdate, '일어나기', sysdate, null);

insert into event(event_id, member_id, category_id, routine_id, title,
location, start_date, end_date, memo, all_day, publice)
values(1, 1, 1, 123, '여행', '안산', sysdate, sysdate, '놀러가자', 1, 1);

commit;

-- calender 테이블 event_id fk 설정했다면 삭제하세요
alter table calender drop CONSTRAINT FK_EVENT_TO_calender_1;

-- 컬럼 추가 (event에 calen_ID 추가 )
ALTER TABLE EVENT ADD calen_ID int;

-- 컬럼 삭제
ALTER TABLE calender drop column event_ID;

-- (변경) event 테이블에 calender 테이블 fk로 설정
ALTER TABLE event
ADD CONSTRAINT fk_calen_ID FOREIGN KEY (calen_ID)
REFERENCES calender(calen_ID);


